import os, sys
import streamlit as st
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import seaborn as sns
import matplotlib.pyplot as plt
    
from utils import (
    carregar_dados, classificar_variaveis,
    ic_media, t_test_duas_amostras, anova_oneway_por_industria,
    media_ic_por_grupo, crescimento_vagas
)

st.set_page_config(page_title="An√°lise de Dados", layout="wide")
st.title("An√°lise de Dados ‚Äî AI Job Trends")

df = carregar_dados()

st.markdown("""
üîé Observei que a coluna **Job Status** possui valores ausentes.  
Para manter a consist√™ncia dos dados e n√£o perder registros, esses valores foram substitu√≠dos por **'N√£o Informado'**.
""")

st.subheader("Vis√£o Geral do Dataset")
st.write(f"**Dimens√£o:** {df.shape[0]} linhas √ó {df.shape[1]} colunas")
st.dataframe(df.head(10), use_container_width=True)

st.header("1) Apresenta√ß√£o dos dados e tipos de vari√°veis")

tipos_df = classificar_variaveis(df)
st.subheader("üîé Classifica√ß√£o (Nominal/Ordinal/Discreta/Cont√≠nua)")
st.dataframe(tipos_df, use_container_width=True)

st.markdown("""
**Perguntas de an√°lise que responderemos:**
1. O **risco de automa√ß√£o** afeta os **sal√°rios**?
2. Existem **diferen√ßas salariais entre ind√∫strias**?
3. Como o **n√≠vel de impacto da IA** se distribui por setor e **faixa salarial**?
4. As **vagas projetadas para 2030** crescem em rela√ß√£o a 2024? Em quais ind√∫strias?
5. **Diversidade de g√™nero** e **trabalho remoto** se relacionam?
""")

st.header("2. Medidas Centrais e An√°lise Inicial")

st.subheader("Vari√°vel escolhida: Experience Required (Years)")

exp = df["Experience Required (Years)"].dropna()

media = exp.mean()
mediana = exp.median()
moda = exp.mode()[0] if not exp.mode().empty else "N/A"
desvio = exp.std()
variancia = exp.var()

st.write(f"**M√©dia:** {media:.2f} anos")
st.write(f"**Mediana:** {mediana:.2f} anos")
st.write(f"**Moda:** {moda} anos")
st.write(f"**Desvio Padr√£o:** {desvio:.2f}")
st.write(f"**Vari√¢ncia:** {variancia:.2f}")

st.markdown("""
‚û°Ô∏è Observamos que a m√©dia e a mediana s√£o pr√≥ximas, indicando uma distribui√ß√£o relativamente **sim√©trica**.  
‚û°Ô∏è O desvio padr√£o mostra a **dispers√£o de anos de experi√™ncia exigida**, com algumas vagas pedindo bem mais do que a maioria.  
""")

st.subheader("üìà Rela√ß√£o entre Experi√™ncia e Sal√°rio")

if "Salary Range (Converted USD)" in df.columns:
    exp_sal = df[["Experience Required (Years)", "Salary Range (Converted USD)"]].dropna()

    corr = exp_sal.corr().iloc[0,1]

    st.write(f"Coeficiente de correla√ß√£o: **{corr:.2f}**")

    fig, ax = plt.subplots()
    sns.scatterplot(
        data=exp_sal,
        x="Experience Required (Years)",
        y="Salary Range (Converted USD)",
        alpha=0.6,
        ax=ax
    )
    sns.regplot(
        data=exp_sal,
        x="Experience Required (Years)",
        y="Salary Range (Converted USD)",
        scatter=False,
        color="red",
        ax=ax
    )
    ax.set_title("Experi√™ncia vs Sal√°rio (USD)")
    st.pyplot(fig)

    st.markdown("""
    ‚û°Ô∏è Existe uma **correla√ß√£o positiva**: vagas que exigem mais experi√™ncia tendem a oferecer **sal√°rios mais altos**.  
    Contudo, a rela√ß√£o n√£o √© perfeita, mostrando que outros fatores (como √°rea de atua√ß√£o, setor e localidade) tamb√©m impactam.
    """)

st.subheader("P1) O risco de automa√ß√£o afeta os sal√°rios?")

df_temp = df[["Automation Risk (%)", "Median Salary (USD)"]].dropna()

df_temp["Faixa de Risco"] = pd.cut(
    df_temp["Automation Risk (%)"],
    bins=[0, 25, 50, 75, 100],
    labels=["Baixo (0-25%)", "M√©dio (26-50%)", "Alto (51-75%)", "Muito Alto (76-100%)"]
)

fig, ax = plt.subplots(figsize=(8,5))
sns.boxplot(
    data=df_temp,
    x="Faixa de Risco",
    y="Median Salary (USD)",
    ax=ax
)
ax.set_title("Sal√°rios por Faixa de Risco de Automa√ß√£o")
ax.set_xlabel("Faixa de Risco de Automa√ß√£o")
ax.set_ylabel("Sal√°rio (USD)")
st.pyplot(fig)

st.markdown("""
‚û°Ô∏è O boxplot mostra a varia√ß√£o dos sal√°rios medianos de acordo com a faixa de risco de automa√ß√£o.
Profiss√µes com alto risco de automa√ß√£o tendem a apresentar sal√°rios mais baixos e menos dispersos, refletindo menor valoriza√ß√£o de mercado.  
""")


st.header("P2) Existem diferen√ßas salariais entre ind√∫strias?")
if "Industry" in df and "Median Salary (USD)" in df:
    agg = media_ic_por_grupo(df, "Industry", "Median Salary (USD)")
    if not agg.empty:
        fig_bar = px.bar(agg, x="Grupo", y="M√©dia", error_y="IC_95", title="M√©dia salarial por Ind√∫stria (com IC95%)")
        fig_bar.update_layout(xaxis_title="Ind√∫stria", yaxis_title="Sal√°rio m√©dio (USD)")
        st.plotly_chart(fig_bar, use_container_width=True)

        an = anova_oneway_por_industria(df, "Median Salary (USD)", min_n=100)
        if an:
            st.markdown(
                f"""
**Teste global (ANOVA)** para diferen√ßas de m√©dia salarial entre ind√∫strias com **n‚â•100**:  
F = {an['F']:.2f}, p = {an['p']:.4f}  
**Interpreta√ß√£o:** p {"< 0.05 ‚áí h√°" if an['p']<0.05 else "‚â• 0.05 ‚áí n√£o h√°"} evid√™ncias de diferen√ßas **significativas** entre as m√©dias salariais dos grupos analisados.
"""
            )
        st.caption("Nota: ICs calculados por t-Student; barras de erro representam ¬±IC95%.")
    else:
        st.warning("N√£o h√° ind√∫strias com amostra suficiente para c√°lculo de IC.")
else:
    st.warning("Colunas necess√°rias n√£o encontradas.")

st.header("P3) Como o n√≠vel de impacto da IA se distribui por setor e faixa salarial?")
if set(["Industry","AI Impact Level","Median Salary (USD)"]).issubset(df.columns):
    col1, col2 = st.columns([1.2,1])
    with col1:
        fig_stk = px.histogram(df, x="Industry", color="AI Impact Level", barmode="stack", title="Distribui√ß√£o de N√≠vel de Impacto por Ind√∫stria")
        fig_stk.update_layout(xaxis_title="Ind√∫stria", yaxis_title="Contagem")
        st.plotly_chart(fig_stk, use_container_width=True)
    with col2:
        fig_box = px.box(df, x="AI Impact Level", y="Median Salary (USD)", color="AI Impact Level", title="Sal√°rio por N√≠vel de Impacto")
        st.plotly_chart(fig_box, use_container_width=True)

    med_por_impacto = df.groupby("AI Impact Level")["Median Salary (USD)"].median().dropna()
    st.markdown("**Mediana salarial por n√≠vel de impacto:**")
    st.table(med_por_impacto.to_frame("Mediana (USD)"))
    st.markdown(
        "**Interpreta√ß√£o:** setores com **impacto High** tendem a apresentar **faixas salariais diferentes** dos n√≠veis Low/Moderate; a distribui√ß√£o por ind√∫stria mostra onde o impacto est√° mais concentrado."
    )

st.header("P4) As vagas projetadas para 2030 crescem em rela√ß√£o a 2024? Em quais ind√∫strias?")
if set(["Job Openings (2024)","Projected Openings (2030)"]).issubset(df.columns):
    total_24 = df["Job Openings (2024)"].sum()
    total_30 = df["Projected Openings (2030)"].sum()
    delta = (total_30 - total_24) / total_24 * 100 if total_24 else float("nan")
    st.markdown(f"**Total de vagas 2024:** {total_24:,.0f} | **Total projetado 2030:** {total_30:,.0f} | **Varia√ß√£o:** {delta:.2f}%")

    cres = crescimento_vagas(df)
    if not cres.empty:
        top = cres.head(15)
        fig_cres = px.bar(top, x="Industry", y="Crescimento (%)", title="Top 15 ind√∫strias por crescimento projetado de vagas (%)")
        st.plotly_chart(fig_cres, use_container_width=True)
        st.caption("Interpreta√ß√£o: valores positivos sugerem **expans√£o** de oportunidades at√© 2030; negativos indicam **contra√ß√£o**.")
else:
    st.warning("Colunas de vagas n√£o encontradas.")

st.subheader("P5) Diversidade de g√™nero e trabalho remoto se relacionam?")

df_temp = df[["Gender Diversity (%)", "Remote Work Ratio (%)"]].dropna()

df_temp["Faixa Diversidade"] = pd.cut(
    df_temp["Gender Diversity (%)"],
    bins=[0, 25, 50, 75, 100],
    labels=["Baixa (0-25%)", "Moderada (26-50%)", "Alta (51-75%)", "Muito Alta (76-100%)"]
)

agrupado = df_temp.groupby("Faixa Diversidade")['Remote Work Ratio (%)'].mean().reset_index()

fig, ax = plt.subplots(figsize=(8,5))
sns.barplot(
    data=agrupado,
    x="Faixa Diversidade",
    y="Remote Work Ratio (%)",
    ax=ax
)
ax.set_title("M√©dia de Trabalho Remoto por Faixa de Diversidade de G√™nero")
ax.set_xlabel("Faixa de Diversidade de G√™nero")
ax.set_ylabel("% de Trabalho Remoto")
st.pyplot(fig)

st.markdown("""
‚û°Ô∏è O gr√°fico evidencia como a diversidade de g√™nero varia entre empresas com diferentes propor√ß√µes de trabalho remoto.

Em faixas de baixo trabalho remoto (0‚Äì25%), observa-se maior dispers√£o, sugerindo que a diversidade depende mais de fatores organizacionais espec√≠ficos do que da modalidade de trabalho.
""")

st.header("4) Intervalos de Confian√ßa e Testes de Hip√≥tese")

if "Median Salary (USD)" in df:
    media, li, ls = ic_media(df["Median Salary (USD)"])
    st.subheader("IC da m√©dia salarial (global)")
    st.markdown(f"**M√©dia** = {media:,.2f} USD | **IC95%** = [{li:,.2f} ; {ls:,.2f}]")
    st.caption("Justificativa: vari√°vel cont√≠nua; amostra grande; uso de **t-Student** para estimar o IC da m√©dia.")

st.subheader("Teste de Hip√≥tese ‚Äî Sal√°rios: IT vs Finance")
if "Industry" in df and "Median Salary (USD)" in df:
    if df["Industry"].isin(["IT","Finance"]).any():
        it = df.loc[df["Industry"]=="IT","Median Salary (USD)"]
        fin = df.loc[df["Industry"]=="Finance","Median Salary (USD)"]
        teste = t_test_duas_amostras(it, fin)
        if teste:
            st.markdown(
                f"""
**H0:** Œº_IT = Œº_Finance  |  **H1:** Œº_IT ‚â† Œº_Finance  
**t({len(it.dropna())+len(fin.dropna())-2} aprox.)** = {teste['t']:.3f}, **p** = {teste['p']:.4f}  
**M√©dias:** IT = {teste['mean1']:,.2f} USD | Finance = {teste['mean2']:,.2f} USD  
**Tamanho de efeito (Cohen's d, Welch):** {teste['cohens_d']:.2f}
"""
            )
            if teste["p"] < 0.05:
                st.success("Conclus√£o: **rejeitamos H0** (5%) ‚Äî evid√™ncia de diferen√ßa salarial entre IT e Finance.")
            else:
                st.info("Conclus√£o: **n√£o rejeitamos H0** (5%) ‚Äî n√£o h√° evid√™ncia de diferen√ßa salarial.")
        else:
            st.warning("Amostras insuficientes para o teste t.")
    else:
        st.warning("Ind√∫strias 'IT' e 'Finance' n√£o encontradas no dataset.")

if set(["Industry","Median Salary (USD)"]).issubset(df.columns):
    sub = df[df["Industry"].isin(["IT","Finance"])]
    if not sub.empty:
        fig_box = px.box(sub, x="Industry", y="Median Salary (USD)", color="Industry", title="Sal√°rios ‚Äî IT vs Finance")
        st.plotly_chart(fig_box, use_container_width=True)

st.caption("""
**Justificativas dos m√©todos:**  
- **IC da m√©dia (t-Student):** vari√°vel cont√≠nua, amostra grande; estimativa do par√¢metro populacional (m√©dia).  
- **Teste t de duas amostras (Welch):** compara√ß√£o de m√©dias entre dois grupos independentes (IT vs Finance) sem assumir vari√¢ncias iguais.  
- **ANOVA one-way:** compara√ß√£o global de mais de dois grupos (ind√∫strias) para verificar se ao menos uma m√©dia difere.  
- **Correla√ß√£o (Pearson/Spearman):** quantifica rela√ß√£o linear/mon√≥tona entre vari√°veis num√©ricas.
""")
